<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AN7e3gCIiIgAi4uLAOfn5wCBgoEAPT09ADAwMAAYGBgA6urqAO7u7gA3NzcArq6uAPPz
        8wAGBgYAioqKAMvLywAMDAwAMzMzAExMTAAsLCwAYmJiAL6+vgB6enoAWVlZANfX1wApKSkAZGRkAMLC
        wgB5eXkAzMzMAEhISAD9/f0A39/fAKKiogBtbW0AyMjIABAQEAD19fUA/v7+ANvb2wAHBwcAXl5eADIy
        MgBjY2MAv7+/AKurqwB6eXgAKiopAC8vLwBSUU8A0NDPAPb29gAiIiIAR0hHAMPDwwAJCQkA5ubmAH59
        fAAEBwwApLLMALG/3ABPV2YACAgHAJWVlQAhISEAFRUVAJKSkgDa2toAOTk5AFFQTwBGTVQA7f//ANvt
        /wDu//8ARUtVAHNzcwCfn58APDw8AIWFhQDd3d0Aenl3AE5NTABHR0cAXVxaADs6OAABAgQAjpqxAKGv
        ygCXo7kAgYSJAOHg3wCcnJwAEhISAMrKygClpKMAAgICAEZNXACOmrMAoa/JAHmEmQARFBoAOjo4AMrJ
        xwDBwcEA2dfVAPz7+gDNzc0AqKioAA8PDwDg4OAAAgEBAIeTqQDm+P8A2Oj/ANTk/wDf8f8At8feAHR2
        ewCsrKwAj4+PAGpqagC6ubkAAAECAMXV6wDQ4f8AzNz8AMvb/ADa7P8AanB1AOvp6QCampoAYGBgALPB
        1gDb7P8AzNv8ANfo/wC9zeMAWVtgAJSUlAD6+voAKioqAFJSUgD39/cA8fHxADg3NgAbHyYAvczpAN3u
        /wDd7/8Avc3pACUpMQAPDg0A4+PjANjY2ADs7OwAsrKyAIKCggATExMABQUFABEREQAdHR0A7+/vAENC
        QAACAgUALTM8ADA1PwADBQcAUE9NADQ0NABfX18ABAQEAJ2dnQDAwMAAfHx8AJ+emwDQz88AKysrAFBP
        UABPT08A09PTAHZ2dgCOjo4ADg4OAPz8/ABBQUEATU1NABcXFwCgoKAAe3t5AEhHRgApKCYAm5uaAGVl
        ZQAUFBQAOzw7ADo6OgB+fn4A1NTUAKOjowAGBggAGh4lAB8iJwCLl68AvMvpAH+FkQAkIyIAAQEBALq6
        ugDR0dEA6+vrAOTk5ACZmZkAHBsaADU7RADS4/gAhI+iAI2ZrgCsutQAKSgnAPn5+QBnZ2cAr6+vACEl
        LQA/RlIAJCguAA4PDwBSUlAAhISEALW0sgCpp6UAu7q5AOrq6QD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8AAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQoQFhwjJwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEFCQ8VGwAIJwEBAQEBAQEB
        AQG5USUCAQEBAQEBAQEBAQQIDgEBIiYvASEBAQEBAQEiGbgAAACFuQEBAQEBAQEBAwcBAQEhCS4BIQEB
        AQEBkaKOty7H1QDlAQEBAQEBAQECAA0BGiAALToBAQEBAQFsoQEBAQEB3iABAQEBAQEBAQEGABQZHyUs
        OUZQXzUBAZCgIwEBAdQq1QEBAQEBAQEBAQEMEwEBAQE4GE9ebgeFj5+vtkHGKlQBAQEBAQEBAQEBAQsS
        GAEBAQEBATUXeiyOjAG1vQAk3QEBAQEBAQEBAQEBAREAHgEBAQEBUW15AY0hAQEBqtMBAQEBAQEBAQEB
        AQEBARcAJAEBARddbHiEjJ4hAQHF0gEBAQEBAQEBAQEBAQEBAR0AKwFFTgEBAXoRnR8BAcQRAQEBAQEB
        AQEBAQEBAQEBAREqN0QnAQEBAQEprgE6w5oBAQEBAQEBAQEBAQEBAQEBASk2QwEBAQEBAZqtXbzCAQEB
        AQEBAQEBAQEBAQEBAQEBATVCTQEBAQEBCm4VAwEBAQEBAQEBAQEBAQEBAQEBAQEBAUEAXAEBAQGcrLSE
        OgEBAQEBAQEBAQEBAQEBAQEBAQE0QExbawEBAZursxJh0QEBAQEBAQEBAQEBAQEBAQEBATM/S1pqAQEB
        kAEBNRbQCgEBAQEBAQEBAQEBAQEBAQEoMj5KWWkBAQEBAQEBAc/ckQEBAQEBAQEBAQEBAQEBASgxPUlY
        aAGDAZqrsrvBzqbkAQEBAQEBAQEBAQEBAQEBATA8SFdnd4KLmaqvugDN2+PpAQEBAQEBAQEBAQEBAQEB
        ITtHVmZ2gYqYqQEBwMza4ugBAQEBAQEBAQEBAQEBAQEBAQFVZXWAiZeosQG/y9nh5wEBAQEBAQEBAQEB
        AQEBAQEBAVRkdH+IlqewAb7K2ODmAQEBAQEBAQEBAQEBAQEBAQEBU2Nzf4CVprABUcnXXqMBAQEBAQEB
        AQEBAQEBAQEBAQFSYnJ+h5SlNAEByNbfAQEBAQEBAQEBAQEBAQEBAQEBAVFhcX2Gk6QBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAWBwfACSowEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAW97FwEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>